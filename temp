From the book:
"As with the FileTransactionLogger, the PostgresTransactionLogger represents a minimal viable implementation of a transaction logger and has lots of room for improvement. Some of the areas for improvement include, but are certainly not limited to the following: We assume that the database and table exist, and we’ll get errors if they don’t. The connection string is hardcoded. Even the password. There’s still no Close method to clean up open connections. The service can close with events still in the write buffer: events can get lost. The log retains records of deleted values forever: it will grow indefinitely. All of these would be (major) impediments in production. I encourage you to take the time to consider—or even implement—solutions to one or more of these points."
Also, I deliberately left out the Sequence field from the Event struct and the query to the database, as I though the ID field in the database was enough. Was this a good idea?